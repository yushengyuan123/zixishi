<style lang="scss" scoped>
  @import "../utils/css/shareCss";

  .shudong-con {
    width: 100%;
    max-height: 100vh;
    background-image: url('https://s1.ax1x.com/2020/05/15/YrNmRA.png');
    background-attachment: fixed;
    background-size: cover;
    overflow: hidden;
  }

  .title {
    @include title;
    padding-top: 34px;
  }

  .bottom-con {
    position: relative;
    min-height: calc(100vh - 72rpx);
    padding: 30px 0;
  }

  .tree-content {
    position: absolute;
    white-space: nowrap;
    width: 100%;
    transition: all .35s ease-in-out;
  }

  .outer {
    position: relative;
    width: 80%;
    margin: auto;
    height: rpx(600);
  }

  .shudong-card {
    position: relative;
    display: inline-block;
    width: 70%;
    min-height: rpx(430);
    overflow-y: scroll;
    background-color: white;
    border: 1px solid rgba(250, 250, 251, 1);
    box-shadow: 0px 3px 8px rgba(32, 32, 39, 0.12);
    margin-left: 10%;
    margin-right: 10%;
    padding: 20px 0 15px 0;
    transition: all .35s ease-in-out;

    image {
      @include imgStyle(17px, 16px);
      margin: 0 0 0 20px;
    }

    .bg {
      margin: 0!important;
      $size: rpx(150);
      position: absolute;
      height: $size;
      width: $size;
      left: calc(50% - 75rpx);
      top: calc(50% - 75rpx);
      opacity: 0.2;
    }

    .shudong-content {
      white-space: normal;
      @include alignCenter(86%);
      color: #202027;
    }
  }

  .modify-con {
    position: fixed;
    height: 80px;
    width: 80px;
    border-radius: 50%;
    right: 15px;
    bottom: 30px;
    z-index: 100;
  }

  .result-btn {
    display: flex;
    height: 20%;
    align-items: center;
    justify-content: center;
    font-size: 50rpx;

    .btn {
      height: 25rpx;
      width: 25rpx;
      border-radius: 50%;
      margin: 0 10rpx 0 10rpx;
    }

    .active {
      background-color: #49958C;
    }

    .normal {
      background:rgba(216,216,216,1);
    }
  }

</style>
<template>
  <view class="shudong-con">
    <view class="title">树洞</view>
    <image class="modify-con" src="../images/leave.png" @tap="goToWrite"/>
    <view class="bottom-con">
      <view class="outer">
        <view
          class="tree-content"
          style="left: {{leftValue}}px"
        >
          <view
            class="shudong-card"
            wx:for="{{card}}"
            wx:key="{{id}}"
            data-classify="{{item}}"
            data-number='{{item.id}}'
            style="height: {{number===index ? '460' : '430'}}rpx"
            capture-catch:touchstart="touchStart"
            capture-catch:touchend="touchEnd"
          >
            <image src="../images/tree.png" class="bg"></image>
            <view>
              <image src="../images/shudong_card.png" alt="1"/>
            </view>
            <view class="shudong-content">
              {{item.content}}
            </view>
          </view>
        </view>
      </view>
      <view class="result-btn">
        <view class="btn {{number === index ? 'active' : 'normal'}}" wx:for="{{card}}" wx:key="{{index}}"></view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import { RequestService } from '../utils/shared/request.js';

  export default class shudong extends wepy.page {
    config = {
      navigationBarTitleText: ''
    };

    components = {};

    mixins = [];

    watch = {};

    events = {};

    data = {
      startX: 0,
      number: 0,
      endX: 0,
      leftValue: 0,
    };

    computed = {};

    requestData() {
      RequestService.soeRequest('GET', '', '/treeHole/getList',
        (fail) => {
          console.log(fail);
        },
        (res) => {
          const temp = []
          for (let len = res.data.length - 1, i = len; i > len - 10; i--) {
            temp.push(res.data[i])
          }
          this.setData({
            'card': temp
          })
        })
    }

    onShow() {
      this.requestData();
    }

    methods = {
      goToWrite() {
        wepy.navigateTo({
          url: '/pages/paper/paper'
        })
      },

      touchStart(e) {
        //记录滑动开始的位置
        this.startX = e.touches[0].clientX
      },

      touchEnd(e) {
        const {windowWidth} = wx.getSystemInfoSync();
        this.endX = e.changedTouches[0].clientX
        //大于0说明向左滑动，小于0说明向右滑动
        if (this.startX - this.endX > 20) {
          if (this.number === 9) {
            return;
          }
          this.number++
          this.leftValue = -this.number * windowWidth * 0.8 * 0.9
        } else if (this.startX - this.endX < -20) {
          if (this.number === 0) {
            return
          }
          this.number--
          this.leftValue = -this.number * windowWidth * 0.8 * 0.9
        }
        this.startX = this.endX = 0
      }
    };
  }
  ;
</script>
