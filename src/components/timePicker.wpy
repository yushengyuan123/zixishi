<style lang="scss" scoped>
  @import "../utils/css/shareCss";

  .time-picker-container {
    width: 100%;

    .year-month {
      height: 25px;
      padding: 15px 0 15px 0;
      text-align: center;

      view {
        @include inline;
        height: 100%;
        margin-left: 20px;
        color: #8A94A6;
        font-size: 19px;
      }
    }

    .choose-time-con {
      height: 25px;
      width: 100%;
      text-align: center;
      font-size: 0;

      .left-arrow {
        @include imgStyle(14px, 10px);
        margin-top: 5px;
        float: left;
      }

      view {
        display: inline-block;
        font-size: 18px;
      }

      .right-arrow {
        @include imgStyle(14px, 10px);
        margin-top: 5px;
        float: right;
      }
    }
  }


</style>
<template>
  <view class="time-picker-container">
    <view class="year-month">
      <view class="detail" @tap="dateChange('day')"
            style="{{choose === 'day' ? 'color:#64C8BC' : 'color:#8A94A6'}}">日</view>
      <view class="detail" @tap="dateChange('week')"
            style="{{choose === 'week' ? 'color:#64C8BC' : 'color:#8A94A6'}}">周</view>
      <view class="detail" @tap="dateChange('month')"
            style="{{choose === 'month' ? 'color:#64C8BC' : 'color:#8A94A6'}}"
      >月</view>
      <view class="detail" @tap="dateChange('year')"
            style="{{choose === 'year' ? 'color:#64C8BC' : 'color:#8A94A6'}}"
      >年</view>
    </view>
    <view class="choose-time-con">
      <image src="../images/left.png" class="left-arrow" @tap="rangeChange('left')"></image>
      <view>{{time}}</view>
      <image src="../images/right.png" class="right-arrow" @tap="rangeChange('right')"></image>
    </view>
  </view>
</template>

<script>
    import wepy from 'wepy';
    import {date, changeDateFormat, arrowOnclick} from '../utils/shared/dateDeal';

    export default class timePicker extends wepy.page {
        components = {};

        mixins = [];

        watch = {};

        events = {};

        data = {
          time: date({type: 'day'}).now.split(' ')[0],
          choose: 'day'
        };

        computed = {

        };

        onReady() {

        }

        methods = {
          dateChange(type) {
            this.choose = type
            let res = date({
              type: type
            })
            let now =  changeDateFormat(res.now)
            let future =  changeDateFormat(res.future)
            console.log(res)
            if (type  === 'day') {
              this.time = now
            } else {
              this.time = `${now}~${future}`
            }
          },

          rangeChange(direction) {
            this.time = arrowOnclick(this.choose, this.time, direction)
          }
        };
    }

</script>
